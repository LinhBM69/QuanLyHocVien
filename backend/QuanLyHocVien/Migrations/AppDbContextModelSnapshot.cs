// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyHocVien.Entities;

#nullable disable

namespace QuanLyHocVien.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyHocVien.Entities.KhoaHoc", b =>
                {
                    b.Property<int>("KhoaHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KhoaHocId"));

                    b.Property<string>("TenKhoaHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KhoaHocId");

                    b.ToTable("KhoaHoc", (string)null);
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.KhoaHocLichHoc", b =>
                {
                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<int>("LichHocId")
                        .HasColumnType("int");

                    b.HasKey("KhoaHocId", "LichHocId");

                    b.HasIndex("LichHocId");

                    b.ToTable("KhoaHocLichHoc", (string)null);
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.KhoaHocMonHoc", b =>
                {
                    b.Property<int>("MonHocId")
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.HasKey("MonHocId", "KhoaHocId");

                    b.HasIndex("KhoaHocId");

                    b.ToTable("KhoaHocMonHoc", (string)null);
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.LichHoc", b =>
                {
                    b.Property<int>("LichHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LichHocId"));

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("LichHocId");

                    b.ToTable("LichHoc", (string)null);
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.MonHoc", b =>
                {
                    b.Property<int>("MonHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonHocId"));

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MonHocId");

                    b.ToTable("MonHoc", (string)null);
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.PhanQuyen", b =>
                {
                    b.Property<int>("PhanQuyenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhanQuyenId"));

                    b.Property<string>("TenQuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhanQuyenId");

                    b.ToTable("PhanQuyen", (string)null);
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.TaiKhoan", b =>
                {
                    b.Property<int>("TaiKhoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaiKhoanId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaiKhoanId");

                    b.ToTable("TaiKhoan", (string)null);
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.TaiKhoanHocVien", b =>
                {
                    b.Property<int>("TaiKhoanHocVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaiKhoanHocVienId"));

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<int>("TaiKhoanNameId")
                        .HasColumnType("int");

                    b.HasKey("TaiKhoanHocVienId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("TaiKhoanHocVien", (string)null);
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.TaiKhoanLichHoc", b =>
                {
                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<int>("LichHocId")
                        .HasColumnType("int");

                    b.HasKey("TaiKhoanId", "LichHocId");

                    b.HasIndex("LichHocId");

                    b.ToTable("TaiKhoanLichHoc", (string)null);
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.TaiKhoanPhanQuyen", b =>
                {
                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<int>("PhanQuyenId")
                        .HasColumnType("int");

                    b.HasKey("TaiKhoanId", "PhanQuyenId");

                    b.HasIndex("PhanQuyenId");

                    b.ToTable("TaiKhoanPhanQuyen", (string)null);
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.KhoaHocLichHoc", b =>
                {
                    b.HasOne("QuanLyHocVien.Entities.KhoaHoc", "KhoaHoc")
                        .WithMany("KhoaHocLichHoc")
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyHocVien.Entities.LichHoc", "LichHoc")
                        .WithMany("KhoaHocLichHoc")
                        .HasForeignKey("LichHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaHoc");

                    b.Navigation("LichHoc");
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.KhoaHocMonHoc", b =>
                {
                    b.HasOne("QuanLyHocVien.Entities.KhoaHoc", "KhoaHoc")
                        .WithMany("KhoaHocMonHoc")
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyHocVien.Entities.MonHoc", "MonHoc")
                        .WithMany("KhoaHocMonHocs")
                        .HasForeignKey("MonHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaHoc");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.TaiKhoanHocVien", b =>
                {
                    b.HasOne("QuanLyHocVien.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("TaiKhoanHocVien")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.TaiKhoanLichHoc", b =>
                {
                    b.HasOne("QuanLyHocVien.Entities.LichHoc", "LichHoc")
                        .WithMany("TaiKhoanLichHoc")
                        .HasForeignKey("LichHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyHocVien.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("TaiKhoanLichHoc")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LichHoc");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.TaiKhoanPhanQuyen", b =>
                {
                    b.HasOne("QuanLyHocVien.Entities.PhanQuyen", "PhanQuyen")
                        .WithMany("TaiKhoanPhanQuyen")
                        .HasForeignKey("PhanQuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyHocVien.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("TaiKhoanPhanQuyen")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhanQuyen");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.KhoaHoc", b =>
                {
                    b.Navigation("KhoaHocLichHoc");

                    b.Navigation("KhoaHocMonHoc");
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.LichHoc", b =>
                {
                    b.Navigation("KhoaHocLichHoc");

                    b.Navigation("TaiKhoanLichHoc");
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.MonHoc", b =>
                {
                    b.Navigation("KhoaHocMonHocs");
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.PhanQuyen", b =>
                {
                    b.Navigation("TaiKhoanPhanQuyen");
                });

            modelBuilder.Entity("QuanLyHocVien.Entities.TaiKhoan", b =>
                {
                    b.Navigation("TaiKhoanHocVien");

                    b.Navigation("TaiKhoanLichHoc");

                    b.Navigation("TaiKhoanPhanQuyen");
                });
#pragma warning restore 612, 618
        }
    }
}
